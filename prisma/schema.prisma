// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Customer {
  id_customer  String   @id @default(uuid())
  name         String
  phone        String
  email String @unique
  priority Priority @default(NOVO)
  plan Plan @default(BRONZE) 
  password String
  frequent Boolean @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt @default(now())
  obs String? 
  vehicles Vehicle[]  
   
}

enum Plan {
  BRONZE 
  PRATA
  OURO
}

enum Priority {
  VIP
  REGULAR
  NOVO
}


enum StatusService {
  PRONTO
  EM_LAVAGEM
  AGENDADO
  CANCELADO
  DESTRUIDO
}


enum TypeService {
  AVULSO
  ASSINATURA
}

enum TypePlan {
  PRATA
  OURO
  BRONZE
  AVULSO
}

model Service {
  id_service           String   @id @default(uuid())
  name  String
  description String?
  service_type         String
  price        Decimal 
  checkInDate    DateTime @default(now())
  updatedAt    DateTime @updatedAt @default(now())
  type TypeService @default(AVULSO)
  typePlan TypePlan @default(AVULSO)
}

enum TypeVehicle {
  CARRO
  MOTO
  CAMINHAO
  OUTRO
}

model  Vehicle {
  id_vehicle String @id @default(uuid())
  id_customer String
  customer Customer @relation(fields: [id_customer], references: [id_customer])
  type TypeVehicle @default(OUTRO)
  model String
  plate String
  year String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}